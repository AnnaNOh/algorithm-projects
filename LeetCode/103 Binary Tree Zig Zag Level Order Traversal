Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).

For example:
Given binary tree [3,9,20,null,null,15,7],
  3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]

// My Solution 

var zigzagLevelOrder = function(root) {
    let result = [];
    let queue = [];
    
    let level;
    let leftLevel = true;
    let lengthOfLevel;
    let currentNode;  
    
    if (root === null) return [];
    
    queue.push(root);
    
    while (queue.length > 0){
        level = [];
        lengthOfLevel = queue.length;
        
        for (let i = 0; i < lengthOfLevel; i++){
            currentNode = queue.shift();
            
            if (currentNode.left) {
                queue.push(currentNode.left);
            }
            if (currentNode.right) {
                queue.push(currentNode.right);
            }    
            
            if (leftLevel){
                level.push(currentNode.val);
            } else {
                level.unshift(currentNode.val);
            } 
            
        }
        result.push(level);
        leftLevel = !leftLevel;
    }
    
    return result;
};
