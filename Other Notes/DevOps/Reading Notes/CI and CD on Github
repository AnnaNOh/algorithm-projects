Professional Guides: Continuous Integration and Continuous Delivery
Video: https://www.youtube.com/watch?v=xSv_m3KhUO8
By: Github Training & Guides

Continuous Integration (CI)
- a workflow strategy that helps ensure everyone's changes will integrate with the current version of the project
- Helps:
    - catch bugs
    - reduce merge conflicts

- Usually a team will practice CI with automated testing using a dedicated server or a CI service
- whenever a developer adds new work to a branch the server will automatically build and test the code to determine whether it works and can be integrated with the code on the main development branch.
- CI server will produce output containing the results of the build and an indication of whether or not the branch passes all the requirements for integration into the main development branch.

CI is needed for CD (continuous delivery and continuous deployment)
- Continuous Delivery is the practice of developing software in such a way that you could release it at any time.
  - lets you develop features with modular code in more manageable increments
- Continuous deployment is an extension of continuous delivery
 - process that lets you deploy newly developed features into production with confidence and experience little if any downtime

 Github uses webhooks to send messages to external systems about activity in your projects.
For each event type you can specify the subscribers to inform about each event.
Once the CI server finishes processing about the current commit, it will send Github's status API a message about the status (whether the changes passed or not)
